@page "/"
<!-- Menu -->
<h1>Our selection of pizzas</h1>


<table class="table">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Pizza Name</th>
            <th scope="col">Price</th>
            <th scope="col">Spiciness</th>
            <th scope="col">Add to Order</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var pizza in State.Menu.Pizzas)
        {
            <tr>
                <th scope="row">
                    @pizza.Name
                </th>
                <td>
                    @pizza.Price
                </td>
                <td>
                    <img src="@SpicinessImage(pizza.Spiciness)"
                         alt="@pizza.Spiciness" />
                </td>
                <td>
                    <button class="btn btn-success"
                            @onclick="@(() => AddToBasket(pizza))">
                        Add
                    </button>
                </td>
            </tr>

        }
    </tbody>
</table>

<!-- End menu -->
<!-- Shopping Basket -->

@if (State.Basket.Orders.Any())
{
    <h1>Your current order</h1>
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th scope="col">Pizza</th>
                <th scope="col">Price/Total</th>
                <th scope="col"></th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (pizza, pos) in State.Basket.Orders.Select(
              (id, pos) => (State.Menu.GetPizza(id), pos)))
            {
                <tr>
                    <th scope="row">@pizza.Name</th>
                    <td>@pizza.Price</td>
                    <td></td>
                    <td>
                        <button class="btn btn-danger"
                                @onclick="@(() => RemoveFromBasket(pos))">
                            Remove
                        </button>
                    </td>
                </tr>
            }

            
            <tr>
                <th scope="row">Total:</th>
                <td>@State.TotalPrice</td>
                <td></td>
                <td></td>
            </tr>
           
        </tbody>
    </table>
}
<!-- End shopping basket -->
<!-- Customer entry -->
<h1>Please enter your details below</h1>
<EditForm OnValidSubmit="PlaceOrder"
          Model="@State.Basket.Customer">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label"
               for="FirstName">Name:</label>
        <div class="col-sm-9">
            <InputText class="form-control"
                       @bind-Value="@State.Basket.Customer.Name" />
            <ValidationMessage For="@(() => State.Basket.Customer.Name)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label"
               for="LastName">Street:</label>
        <div class="col-sm-9">
            <InputText class="form-control"
                       @bind-Value="@State.Basket.Customer.Street" />
            <ValidationMessage For="@(() => State.Basket.Customer.Street)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label"
               for="Birthday">City:</label>
        <div class="col-sm-9">
            <InputText class="form-control"
                       @bind-Value="@State.Basket.Customer.City" />
            <ValidationMessage For="@(() => State.Basket.Customer.City)" />
        </div>
    </div>
    <div class="form-group mb-0">
        <button type="submit"
                id="BtnRegister" class="btn btn-primary">
            Checkout
        </button>
    </div>
</EditForm>

<!-- End customer entry -->
<p>@State.ToJson()</p>



@code {
    
    private State State { get; } = new State()
    {
        Menu = new Menu
        {
            Pizzas = new List<Pizza>
{
                    new Pizza(1, "Pepperoni", 8.99M, Spiciness.Spicy ),
                    new Pizza(2, "Margarita", 7.99M, Spiciness.None ),
                    new Pizza(3, "Diabolo", 9.99M, Spiciness.Hot )
            }
        }
    };

    private string SpicinessImage(Spiciness spiciness)
    => $"images/{spiciness.ToString().ToLower()}.png";

    private void AddToBasket(Pizza pizza)
    {
        Console.WriteLine($"Added pizza {pizza.Name}");
        State.Basket.Add(pizza.Id);
    }

    private void PlaceOrder()
    {
        Console.WriteLine("Placing order");
    }

    private void RemoveFromBasket(int pos)
    {
        Console.WriteLine($"Removing pizza at pos {pos}");
        State.Basket.RemoveAt(pos);
    }


}
